{
  "version": 3,
  "sources": ["../../../app/routes/dogs.$dogId.update.tsx"],
  "sourcesContent": ["import type { DataFunctionArgs, LoaderArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { withZod } from \"@remix-validated-form/with-zod\";\nimport { ValidatedForm, validationError } from \"remix-validated-form\";\nimport type { RouteParams } from \"routes-gen\";\nimport { route } from \"routes-gen\";\nimport { eq } from \"drizzle-orm/expressions\";\nimport { z } from \"zod\";\n\nimport { Input } from \"~/components/Input\";\nimport { db } from \"~/db/config.server\";\nimport { dogs } from \"~/db/schema.server\";\n\nconst validator = withZod(\n  z.object({\n    name: z.string().min(1).max(34),\n    breed: z.string().min(1).max(34),\n  })\n);\n\nexport const loader = ({ params }: LoaderArgs) => {\n  const { dogId } = params as RouteParams[\"/dogs/:dogId/update\"];\n\n  const { id, ...rest } = db\n    .select()\n    .from(dogs)\n    .where(eq(dogs.id, Number(dogId)))\n    .get();\n\n  return json({ defaultValues: rest });\n};\n\nexport const action = async ({ request, params }: DataFunctionArgs) => {\n  const fieldValues = await validator.validate(await request.formData());\n  const { dogId } = params as RouteParams[\"/dogs/:dogId/update\"];\n\n  if (fieldValues.error) {\n    return validationError(fieldValues.error);\n  }\n\n  db.update(dogs)\n    .set(fieldValues.data)\n    .where(eq(dogs.id, Number(dogId)))\n    .run();\n\n  return redirect(route(\"/dogs\"));\n};\n\nexport default function DogDetailsUpdate() {\n  const { defaultValues } = useLoaderData<typeof loader>();\n\n  return (\n    <div>\n      <h2 className=\"mb-6 text-xl\">Update doggo entry</h2>\n\n      <ValidatedForm\n        className=\"space-y-6\"\n        method=\"POST\"\n        validator={validator}\n        defaultValues={defaultValues}\n      >\n        <Input name=\"name\" label=\"Name\" placeholder=\"Name\" />\n        <Input name=\"breed\" label=\"Breed\" placeholder=\"Breed\" />\n        <button className=\"btn btn-accent\" type=\"submit\">\n          Update\n        </button>\n      </ValidatedForm>\n    </div>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA,sBAAwB;AACxB;AAEA,wBAAsB;AACtB,yBAAmB;AAInB,oBAAmB;AACnB,oBAAqB;AA0Cf;AAxCN,IAAM,gBAAY;AAAA,EAChB,EAAE,OAAO;AAAA,IACP,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,IAAI,EAAE;AAAA,IAC9B,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,IAAI,EAAE;AAAA,EACjC,CAAC;AACH;AA8Be,SAAR,mBAAoC;AACzC,QAAM,EAAE,cAAc,IAAI,cAA6B;AAEvD,SACE,mDAAC,SACC;AAAA,uDAAC,QAAG,WAAU,gBAAe,kCAA7B;AAAA;AAAA;AAAA;AAAA,WAA+C;AAAA,IAE/C;AAAA,MAAC;AAAA;AAAA,QACC,WAAU;AAAA,QACV,QAAO;AAAA,QACP;AAAA,QACA;AAAA,QAEA;AAAA,6DAAC,SAAM,MAAK,QAAO,OAAM,QAAO,aAAY,UAA5C;AAAA;AAAA;AAAA;AAAA,iBAAmD;AAAA,UACnD,mDAAC,SAAM,MAAK,SAAQ,OAAM,SAAQ,aAAY,WAA9C;AAAA;AAAA;AAAA;AAAA,iBAAsD;AAAA,UACtD,mDAAC,YAAO,WAAU,kBAAiB,MAAK,UAAS,sBAAjD;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA;AAAA;AAAA,MAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWA;AAAA,OAdF;AAAA;AAAA;AAAA;AAAA,SAeA;AAEJ;",
  "names": []
}
